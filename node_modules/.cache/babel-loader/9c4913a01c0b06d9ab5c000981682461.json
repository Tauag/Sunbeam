{"ast":null,"code":"import * as Weather from '../icons/weatherstate';\nexport default function getPalette(weatherType) {\n  switch (weatherType) {\n    case 'clear-day':\n      return {\n        weather: Weather.ClearDay,\n        weatherMsg: 'clear day',\n        color: '#F4FDA2',\n        fontColor: 'black'\n      };\n\n    case 'clear-night':\n      return {\n        weather: Weather.ClearNight,\n        weatherMsg: 'clear night',\n        color: '#F4FDA2',\n        fontColor: 'black'\n      };\n\n    case 'rain':\n      return {\n        weather: Weather.Rainy,\n        weatherMsg: 'rain',\n        color: '#66656B',\n        fontColor: 'white'\n      };\n\n    case 'snow':\n      return {\n        weather: Weather.Snowy,\n        weatherMsg: 'snow',\n        color: '#00e5ff',\n        fontColor: 'white'\n      };\n\n    case 'sleet':\n      return {\n        weather: Weather.Sleet,\n        weatherMsg: 'sleet',\n        color: '#00a0b2',\n        fontColor: 'white'\n      };\n\n    case 'wind':\n      return {\n        weather: Weather.Windy,\n        weatherMsg: 'wind',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'fog':\n      return {\n        weather: Weather.Foggy,\n        weatherMsg: 'fog',\n        color: '#5f5f62',\n        fontColor: 'white'\n      };\n\n    case 'cloudy':\n      return {\n        weather: Weather.Cloudy,\n        weatherMsg: 'cloudy',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'partly-cloudy-day':\n      return {\n        weather: Weather.PartlyCloudyDay,\n        weatherMsg: 'partly cloudly daytime',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'partly-cloudy-night':\n      return {\n        weather: Weather.PartlyCloudyNight,\n        weatherMsg: 'partly cloudly nighttime',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'hail':\n      return {\n        weather: Weather.Hail,\n        weatherMsg: 'hail',\n        color: '#00a0b2',\n        fontColor: 'white'\n      };\n\n    case 'thunderstorm':\n      return {\n        weather: Weather.Thunderstorm,\n        weatherMsg: 'thunderstorm',\n        color: '#66656B',\n        fontColor: 'white'\n      };\n\n    case 'tornado':\n      return {\n        weather: Weather.Tornado,\n        weatherMsg: 'tornado',\n        color: '#b2102f',\n        fontColor: 'white'\n      };\n\n    default:\n      // Eventually I will put in a default icon\n      throw new Error(\"\".concat(weatherType, \" is not a supported Weather Type\"));\n  }\n}","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/shared/palette.js"],"names":["Weather","getPalette","weatherType","weather","ClearDay","weatherMsg","color","fontColor","ClearNight","Rainy","Snowy","Sleet","Windy","Foggy","Cloudy","PartlyCloudyDay","PartlyCloudyNight","Hail","Thunderstorm","Tornado","Error"],"mappings":"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","sourcesContent":["import * as Weather from '../icons/weatherstate';\n\nexport default function getPalette(weatherType) {\n\tswitch (weatherType) {\n\t\tcase 'clear-day':\n\t\t\treturn {\n\t\t\t\tweather: Weather.ClearDay,\n\t\t\t\tweatherMsg: 'clear day',\n\t\t\t\tcolor: '#F4FDA2',\n\t\t\t\tfontColor: 'black'\n\t\t\t};\n\t\tcase 'clear-night':\n\t\t\treturn {\n\t\t\t\tweather: Weather.ClearNight,\n\t\t\t\tweatherMsg: 'clear night',\n\t\t\t\tcolor: '#F4FDA2',\n\t\t\t\tfontColor: 'black'\n\t\t\t};\n\t\tcase 'rain':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Rainy,\n\t\t\t\tweatherMsg: 'rain',\n\t\t\t\tcolor: '#66656B',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'snow':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Snowy,\n\t\t\t\tweatherMsg: 'snow',\n\t\t\t\tcolor: '#00e5ff',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'sleet':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Sleet,\n\t\t\t\tweatherMsg: 'sleet',\n\t\t\t\tcolor: '#00a0b2',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'wind':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Windy,\n\t\t\t\tweatherMsg: 'wind',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'fog':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Foggy,\n\t\t\t\tweatherMsg: 'fog',\n\t\t\t\tcolor: '#5f5f62',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'cloudy':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Cloudy,\n\t\t\t\tweatherMsg: 'cloudy',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'partly-cloudy-day':\n\t\t\treturn {\n\t\t\t\tweather: Weather.PartlyCloudyDay,\n\t\t\t\tweatherMsg: 'partly cloudly daytime',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'partly-cloudy-night':\n\t\t\treturn {\n\t\t\t\tweather: Weather.PartlyCloudyNight,\n\t\t\t\tweatherMsg: 'partly cloudly nighttime',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'hail':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Hail,\n\t\t\t\tweatherMsg: 'hail',\n\t\t\t\tcolor: '#00a0b2',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'thunderstorm':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Thunderstorm,\n\t\t\t\tweatherMsg: 'thunderstorm',\n\t\t\t\tcolor: '#66656B',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'tornado':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Tornado,\n\t\t\t\tweatherMsg: 'tornado',\n\t\t\t\tcolor: '#b2102f',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tdefault:\n\t\t\t// Eventually I will put in a default icon\n\t\t\tthrow new Error(`${weatherType} is not a supported Weather Type`);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}