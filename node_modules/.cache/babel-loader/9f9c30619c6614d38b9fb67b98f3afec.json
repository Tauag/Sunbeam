{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/hourly/hourlyforecast.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\twidth: \", \"%;\\n\\tcolor: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport getPalette from '../shared/palette';\nimport './hourlyforecast.css';\nvar ForecastHour = styled.span(_templateObject(), function (props) {\n  return props.hours / 12 * 100;\n}, function (props) {\n  return props.color;\n});\nexport default function HourlyForecast(props) {\n  return React.createElement(\"div\", {\n    className: \"hourly-forecast-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"hourly-forecast-summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.hourly.summary), React.createElement(\"div\", {\n    className: \"hourly-forecast-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n}\nHourlyForecast.propTypes = {\n  hourly: PropTypes.shape({\n    summary: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      time: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      temperature: PropTypes.number.isRequired\n    }))\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/hourly/hourlyforecast.js"],"names":["React","PropTypes","styled","getPalette","ForecastHour","span","props","hours","color","HourlyForecast","hourly","summary","propTypes","shape","string","isRequired","data","arrayOf","time","number","icon","temperature"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,sBAAP;AAEA,IAAMC,YAAY,GAAGF,MAAM,CAACG,IAAV,oBACR,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,KAAN,GAAc,EAAf,GAAqB,GAAzB;AAAA,CADG,EAER,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,KAAV;AAAA,CAFG,CAAlB;AAKA,eAAe,SAASC,cAAT,CAAwBH,KAAxB,EAA+B;AAC7C,SACC;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CA,KAAK,CAACI,MAAN,CAAaC,OAAxD,CADD,EAEC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,CADD;AAQA;AAEDF,cAAc,CAACG,SAAf,GAA2B;AAC1BF,EAAAA,MAAM,EAAET,SAAS,CAACY,KAAV,CAAgB;AACvBF,IAAAA,OAAO,EAAEV,SAAS,CAACa,MAAV,CAAiBC,UADH;AAEvBC,IAAAA,IAAI,EAAEf,SAAS,CAACgB,OAAV,CACLhB,SAAS,CAACY,KAAV,CAAgB;AACfK,MAAAA,IAAI,EAAEjB,SAAS,CAACkB,MAAV,CAAiBJ,UADR;AAEfK,MAAAA,IAAI,EAAEnB,SAAS,CAACa,MAAV,CAAiBC,UAFR;AAGfM,MAAAA,WAAW,EAAEpB,SAAS,CAACkB,MAAV,CAAiBJ;AAHf,KAAhB,CADK;AAFiB,GAAhB,EASLA;AAVuB,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport getPalette from '../shared/palette';\nimport './hourlyforecast.css';\n\nconst ForecastHour = styled.span`\n\twidth: ${props => (props.hours / 12) * 100}%;\n\tcolor: ${props => props.color};\n`;\n\nexport default function HourlyForecast(props) {\n\treturn (\n\t\t<div className=\"hourly-forecast-wrapper\">\n\t\t\t<span className=\"hourly-forecast-summary\">{props.hourly.summary}</span>\n\t\t\t<div className=\"hourly-forecast-bar\">\n\t\t\t\t<span />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nHourlyForecast.propTypes = {\n\thourly: PropTypes.shape({\n\t\tsummary: PropTypes.string.isRequired,\n\t\tdata: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\ttime: PropTypes.number.isRequired,\n\t\t\t\ticon: PropTypes.string.isRequired,\n\t\t\t\ttemperature: PropTypes.number.isRequired\n\t\t\t})\n\t\t)\n\t}).isRequired\n};\n"]},"metadata":{},"sourceType":"module"}