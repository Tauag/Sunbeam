{"ast":null,"code":"import _classCallCheck from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Location from './search/Location';\nimport WeatherView from './display/weatherview';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setLatLng = function (coordinates) {\n      var _this$state = _this.state,\n          lat = _this$state.lat,\n          lng = _this$state.lng;\n\n      if (coordinates.lat !== lat && coordinates.lng != lng) {\n        _this.handleDarkSkyCall(coordinates);\n      }\n    };\n\n    _this.handleError = function (errorSource, errorObj) {\n      console.log(errorObj); // Need to display some sort of error message on the application\n      // geocode\n      // geolocate\n      // weather\n      // failed response\n      // missing features\n    };\n\n    _this.state = {\n      coordinates: {\n        lat: 40.7127753,\n        lng: -74.0059728\n      },\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleDarkSkyCall\",\n    value: function handleDarkSkyCall(coordinates) {\n      var _this2 = this;\n\n      var lat = coordinates.lat,\n          lng = coordinates.lng;\n      return new Promise(function (resolve, reject) {\n        axios(\"https://api.darksky.net/forecast/\".concat(process.env.REACT_APP_DARKSKYKEY, \"/\").concat(lat, \",\").concat(lng), {\n          method: 'GET',\n          mode: 'no-cors'\n        }).then(function (response) {\n          var data = response.data;\n\n          _this2.setState({\n            data: data,\n            coordinates: coordinates\n          }, function () {\n            resolve();\n          });\n        }, function (error) {\n          _this2.onError('darksky', error);\n\n          reject();\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Location, {\n        address: \"New York, NY, USA\",\n        setCoordinates: this.setLatLng,\n        onError: this.handleError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(WeatherView, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/App.js"],"names":["React","Component","axios","Location","WeatherView","App","props","setLatLng","coordinates","state","lat","lng","handleDarkSkyCall","handleError","errorSource","errorObj","console","log","data","Promise","resolve","reject","process","env","REACT_APP_DARKSKYKEY","method","mode","then","response","setState","error","onError"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACL,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,6EAAMA,KAAN;;AADkB,UAQnBC,SARmB,GAQP,UAAAC,WAAW,EAAI;AAAA,wBACL,MAAKC,KADA;AAAA,UAClBC,GADkB,eAClBA,GADkB;AAAA,UACbC,GADa,eACbA,GADa;;AAG1B,UAAIH,WAAW,CAACE,GAAZ,KAAoBA,GAApB,IAA2BF,WAAW,CAACG,GAAZ,IAAmBA,GAAlD,EAAuD;AACtD,cAAKC,iBAAL,CAAuBJ,WAAvB;AACA;AACD,KAdkB;;AAAA,UAgBnBK,WAhBmB,GAgBL,UAACC,WAAD,EAAcC,QAAd,EAA2B;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADwC,CAExC;AACA;AACA;AACA;AACA;AACA;AACA,KAxBkB;;AAElB,UAAKN,KAAL,GAAa;AACZD,MAAAA,WAAW,EAAE;AAAEE,QAAAA,GAAG,EAAE,UAAP;AAAmBC,QAAAA,GAAG,EAAE,CAAC;AAAzB,OADD;AAEZO,MAAAA,IAAI,EAAE;AAFM,KAAb;AAFkB;AAMlB;;;;sCAoBiBV,W,EAAa;AAAA;;AAAA,UACtBE,GADsB,GACTF,WADS,CACtBE,GADsB;AAAA,UACjBC,GADiB,GACTH,WADS,CACjBG,GADiB;AAG9B,aAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCnB,QAAAA,KAAK,4CAEHoB,OAAO,CAACC,GAAR,CAAYC,oBAFT,cAGAd,GAHA,cAGOC,GAHP,GAIJ;AAAEc,UAAAA,MAAM,EAAE,KAAV;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAJI,CAAL,CAKEC,IALF,CAMC,UAAAC,QAAQ,EAAI;AACX,cAAMV,IAAI,GAAGU,QAAQ,CAACV,IAAtB;;AACA,UAAA,MAAI,CAACW,QAAL,CAAc;AAAEX,YAAAA,IAAI,EAAJA,IAAF;AAAQV,YAAAA,WAAW,EAAXA;AAAR,WAAd,EAAqC,YAAM;AAC1CY,YAAAA,OAAO;AACP,WAFD;AAGA,SAXF,EAYC,UAAAU,KAAK,EAAI;AACR,UAAA,MAAI,CAACC,OAAL,CAAa,SAAb,EAAwBD,KAAxB;;AACAT,UAAAA,MAAM;AACN,SAfF;AAiBA,OAlBM,CAAP;AAmBA;;;6BAEQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,OAAO,EAAC,mBADT;AAEC,QAAA,cAAc,EAAE,KAAKd,SAFtB;AAGC,QAAA,OAAO,EAAE,KAAKM,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAMC,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWS,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CADD;AAUA;;;;EA9DgBjB,S;;AAiElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Location from './search/Location';\nimport WeatherView from './display/weatherview';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcoordinates: { lat: 40.7127753, lng: -74.0059728 },\n\t\t\tdata: {}\n\t\t};\n\t}\n\n\tsetLatLng = coordinates => {\n\t\tconst { lat, lng } = this.state;\n\n\t\tif (coordinates.lat !== lat && coordinates.lng != lng) {\n\t\t\tthis.handleDarkSkyCall(coordinates);\n\t\t}\n\t};\n\n\thandleError = (errorSource, errorObj) => {\n\t\tconsole.log(errorObj);\n\t\t// Need to display some sort of error message on the application\n\t\t// geocode\n\t\t// geolocate\n\t\t// weather\n\t\t// failed response\n\t\t// missing features\n\t};\n\n\thandleDarkSkyCall(coordinates) {\n\t\tconst { lat, lng } = coordinates;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios(\n\t\t\t\t`https://api.darksky.net/forecast/${\n\t\t\t\t\tprocess.env.REACT_APP_DARKSKYKEY\n\t\t\t\t}/${lat},${lng}`,\n\t\t\t\t{ method: 'GET', mode: 'no-cors' }\n\t\t\t).then(\n\t\t\t\tresponse => {\n\t\t\t\t\tconst data = response.data;\n\t\t\t\t\tthis.setState({ data, coordinates }, () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.onError('darksky', error);\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app-header\">\n\t\t\t\t<Location\n\t\t\t\t\taddress=\"New York, NY, USA\"\n\t\t\t\t\tsetCoordinates={this.setLatLng}\n\t\t\t\t\tonError={this.handleError}\n\t\t\t\t/>\n\t\t\t\t<WeatherView data={this.state.data} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}