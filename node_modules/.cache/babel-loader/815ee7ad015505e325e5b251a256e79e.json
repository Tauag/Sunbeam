{"ast":null,"code":"var _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/currentcard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\n\nfunction fToC(temp) {\n  return (temp / 32).toFixed(2);\n}\n\nexport default function CurrentCard(props) {\n  var _props$current = props.current,\n      temperature = _props$current.temperature,\n      summary = _props$current.summary,\n      icon = _props$current.icon,\n      humidity = _props$current.humidity;\n  var displayTemp = props.unit === 'c' ? fToC(parseFloat(temperature)) : temperature;\n  return React.createElement(\"div\", {\n    className: \"current-card-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-graphic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"current-card-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"current-card-temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, displayTemp, \"\\xB0\"), React.createElement(\"span\", {\n    className: \"current-card-weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, summary))), React.createElement(\"div\", {\n    className: \"current-card-banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-banner-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"current-card-banner-body current-card-banner-subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Humidity:\", ' '), React.createElement(\"span\", {\n    className: \"current-card-banner-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" \".concat(humidity * 100, \"%\")))));\n}\nCurrentCard.propTypes = {\n  current: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    summary: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    windSpeed: PropTypes.number.isRequired,\n    uvIndex: PropTypes.number.isRequired\n  }).isRequired,\n  bannerItems: PropTypes.arrayOf(PropTypes.string),\n  bannerNames: PropTypes.arrayOf(PropTypes.string),\n  unit: PropTypes.string\n};\nCurrentCard.defaultProps = {\n  bannerItems: ['humidity', 'windSpeed', 'uvIndex'],\n  bannerNames: ['Humidity', 'WindSpeed', 'UV Index'],\n  unit: 'f'\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/currentcard.js"],"names":["React","PropTypes","fToC","temp","toFixed","CurrentCard","props","current","temperature","summary","icon","humidity","displayTemp","unit","parseFloat","propTypes","shape","number","isRequired","string","windSpeed","uvIndex","bannerItems","arrayOf","bannerNames","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACnB,SAAO,CAACA,IAAI,GAAG,EAAR,EAAYC,OAAZ,CAAoB,CAApB,CAAP;AACA;;AAED,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,uBACOA,KAAK,CAACC,OADb;AAAA,MAClCC,WADkC,kBAClCA,WADkC;AAAA,MACrBC,OADqB,kBACrBA,OADqB;AAAA,MACZC,IADY,kBACZA,IADY;AAAA,MACNC,QADM,kBACNA,QADM;AAG1C,MAAMC,WAAW,GAChBN,KAAK,CAACO,IAAN,KAAe,GAAf,GAAqBX,IAAI,CAACY,UAAU,CAACN,WAAD,CAAX,CAAzB,GAAqDA,WADtD;AAGA,SACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCI,WAArC,SADD,EAEC;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCH,OAAxC,CAFD,CAFD,CADD,EAQC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,uDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW,GADX,CADD,EAIC;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgDE,QAAQ,GACvD,GADD,OAJD,CADD,CARD,CADD;AAoBA;AAEDN,WAAW,CAACU,SAAZ,GAAwB;AACvBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,KAAV,CAAgB;AACxBR,IAAAA,WAAW,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADN;AAExBT,IAAAA,OAAO,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UAFF;AAGxBR,IAAAA,IAAI,EAAET,SAAS,CAACkB,MAAV,CAAiBD,UAHC;AAIxBP,IAAAA,QAAQ,EAAEV,SAAS,CAACgB,MAAV,CAAiBC,UAJH;AAKxBE,IAAAA,SAAS,EAAEnB,SAAS,CAACgB,MAAV,CAAiBC,UALJ;AAMxBG,IAAAA,OAAO,EAAEpB,SAAS,CAACgB,MAAV,CAAiBC;AANF,GAAhB,EAONA,UARoB;AASvBI,EAAAA,WAAW,EAAErB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACkB,MAA5B,CATU;AAUvBK,EAAAA,WAAW,EAAEvB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACkB,MAA5B,CAVU;AAWvBN,EAAAA,IAAI,EAAEZ,SAAS,CAACkB;AAXO,CAAxB;AAcAd,WAAW,CAACoB,YAAZ,GAA2B;AAC1BH,EAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,SAA1B,CADa;AAE1BE,EAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,CAFa;AAG1BX,EAAAA,IAAI,EAAE;AAHoB,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\n\nfunction fToC(temp) {\n\treturn (temp / 32).toFixed(2);\n}\n\nexport default function CurrentCard(props) {\n\tconst { temperature, summary, icon, humidity } = props.current;\n\n\tconst displayTemp =\n\t\tprops.unit === 'c' ? fToC(parseFloat(temperature)) : temperature;\n\n\treturn (\n\t\t<div className=\"current-card-set\">\n\t\t\t<div className=\"current-card-wrapper\">\n\t\t\t\t<div className=\"current-card-graphic\" />\n\t\t\t\t<div className=\"current-card-info\">\n\t\t\t\t\t<span className=\"current-card-temp\">{displayTemp}&#176;</span>\n\t\t\t\t\t<span className=\"current-card-weather\">{summary}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"current-card-banner\">\n\t\t\t\t<div className=\"current-card-banner-component\">\n\t\t\t\t\t<span className=\"current-card-banner-body current-card-banner-subtitle\">\n\t\t\t\t\t\tHumidity:{' '}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"current-card-banner-body\">{` ${humidity *\n\t\t\t\t\t\t100}%`}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nCurrentCard.propTypes = {\n\tcurrent: PropTypes.shape({\n\t\ttemperature: PropTypes.number.isRequired,\n\t\tsummary: PropTypes.string.isRequired,\n\t\ticon: PropTypes.string.isRequired,\n\t\thumidity: PropTypes.number.isRequired,\n\t\twindSpeed: PropTypes.number.isRequired,\n\t\tuvIndex: PropTypes.number.isRequired\n\t}).isRequired,\n\tbannerItems: PropTypes.arrayOf(PropTypes.string),\n\tbannerNames: PropTypes.arrayOf(PropTypes.string),\n\tunit: PropTypes.string\n};\n\nCurrentCard.defaultProps = {\n\tbannerItems: ['humidity', 'windSpeed', 'uvIndex'],\n\tbannerNames: ['Humidity', 'WindSpeed', 'UV Index'],\n\tunit: 'f'\n};\n"]},"metadata":{},"sourceType":"module"}