{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/hourly/hourlyforecast.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\theight: 100%;\\n\\tmargin: auto;\\n\\n\\t@media (min-width: 769px) {\\n\\t\\tdisplay: \", \";\\n\\t}\\n\\n\\t@media (max-width: 768px) {\\n\\t\\tdisplay: \", \";\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\twidth: \", \"%;\\n\\theight: \", \";\\n\\talign-self: flex-start;\\n\\tmargin-left: \", \"%;\\n\\tborder-left: #7f7f81 1px solid;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\twidth: \", \"%;\\n\\theight: 50px;\\n\\tbackground-color: \", \";\\n\\toverflow: hidden;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport getWeatherPalette from '../shared/palette';\nimport './hourlyforecast.css';\nvar ForecastHour = styled.span(_templateObject(), function (props) {\n  return props.hours / props.maxHours * 100;\n}, function (props) {\n  return props.color;\n});\nvar ForecastTicks = styled.span(_templateObject2(), function (props) {\n  return 1 / props.maxHours * 100;\n}, function (props) {\n  return props.extended ? '100%' : '50%';\n}, function (props) {\n  return 1 / (props.maxHours * 2) * 100;\n});\nvar Img = styled.img(_templateObject3(), function (props) {\n  return props.counter < 2 ? 'none' : '';\n}, function (props) {\n  return props.counter < 3 ? 'none' : '';\n});\nexport function generateHourlyForecastBar(data) {\n  var maxHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  if (data.length < maxHours) throw new Error(\"Cannot generate a \".concat(maxHours, \" hour forecast bar, data is of length \").concat(data.length));else if (maxHours < 1) {\n    throw new Error('Cannot generate a forecast bar that is less than 1 hour');\n  }\n  var container = [];\n  var weatherIcon = data[0].icon;\n  var weatherSummary = data[0].summary;\n  var weatherCounter = 1;\n\n  for (var i = 1; i < maxHours; i++) {\n    var icon = data[i].icon;\n\n    var _getWeatherPalette = getWeatherPalette(weatherIcon),\n        _color = _getWeatherPalette.color,\n        _weather = _getWeatherPalette.weather,\n        _weatherMsg = _getWeatherPalette.weatherMsg;\n\n    if (icon !== weatherIcon) {\n      container.push(React.createElement(ForecastHour, {\n        key: \"hourly-part-\".concat(i),\n        hours: weatherCounter,\n        maxHours: maxHours,\n        color: _color,\n        \"aria-label\": weatherSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Img, {\n        src: _weather,\n        alt: _weatherMsg,\n        counter: weatherCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n      weatherIcon = icon;\n      weatherSummary = data[i].summary;\n      weatherCounter = 1;\n    } else {\n      weatherCounter += 1;\n    }\n  }\n\n  var _getWeatherPalette2 = getWeatherPalette(weatherIcon),\n      color = _getWeatherPalette2.color,\n      weather = _getWeatherPalette2.weather,\n      weatherMsg = _getWeatherPalette2.weatherMsg;\n\n  container.push(React.createElement(ForecastHour, {\n    key: \"hourly-img-\".concat(maxHours),\n    hours: weatherCounter,\n    maxHours: maxHours,\n    color: color,\n    \"aria-label\": weatherSummary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Img, {\n    src: weather,\n    alt: weatherMsg,\n    counter: weatherCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n  return container;\n}\nexport function generateHourlyTickMarks() {\n  var maxHours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n  var container = [];\n\n  for (var i = 0; i < maxHours; i++) {\n    container.push(React.createElement(ForecastTicks, {\n      key: \"tick-\".concat(i),\n      maxHours: maxHours,\n      extended: i % 2 === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n  return container;\n}\nexport default function HourlyForecast(props) {\n  var forecastContainer = generateHourlyForecastBar(props.hourly.data, 24);\n  var forecastTickMarks = generateHourlyTickMarks(24);\n  return React.createElement(\"div\", {\n    className: \"hourly-forecast-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"hourly-forecast-summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.hourly.summary), React.createElement(\"div\", {\n    className: \"hourly-forecast-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, forecastContainer), React.createElement(\"div\", {\n    className: \"hourly-forecast-tickmarks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, forecastTickMarks));\n}\nHourlyForecast.propTypes = {\n  hourly: PropTypes.shape({\n    summary: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      time: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      temperature: PropTypes.number.isRequired\n    }))\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/hourly/hourlyforecast.js"],"names":["React","PropTypes","styled","getWeatherPalette","ForecastHour","span","props","hours","maxHours","color","ForecastTicks","extended","Img","img","counter","generateHourlyForecastBar","data","length","Error","container","weatherIcon","icon","weatherSummary","summary","weatherCounter","i","weather","weatherMsg","push","generateHourlyTickMarks","HourlyForecast","forecastContainer","hourly","forecastTickMarks","propTypes","shape","string","isRequired","arrayOf","time","number","temperature"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport getWeatherPalette from '../shared/palette';\nimport './hourlyforecast.css';\n\nconst ForecastHour = styled.span`\n\twidth: ${props => (props.hours / props.maxHours) * 100}%;\n\theight: 50px;\n\tbackground-color: ${props => props.color};\n\toverflow: hidden;\n`;\n\nconst ForecastTicks = styled.span`\n\twidth: ${props => (1 / props.maxHours) * 100}%;\n\theight: ${props => (props.extended ? '100%' : '50%')};\n\talign-self: flex-start;\n\tmargin-left: ${props => (1 / (props.maxHours * 2)) * 100}%;\n\tborder-left: #7f7f81 1px solid;\n`;\n\nconst Img = styled.img`\n\theight: 100%;\n\tmargin: auto;\n\n\t@media (min-width: 769px) {\n\t\tdisplay: ${props => (props.counter < 2 ? 'none' : '')};\n\t}\n\n\t@media (max-width: 768px) {\n\t\tdisplay: ${props => (props.counter < 3 ? 'none' : '')};\n\t}\n`;\n\nexport function generateHourlyForecastBar(data, maxHours = 12) {\n\tif (data.length < maxHours)\n\t\tthrow new Error(\n\t\t\t`Cannot generate a ${maxHours} hour forecast bar, data is of length ${\n\t\t\t\tdata.length\n\t\t\t}`\n\t\t);\n\telse if (maxHours < 1) {\n\t\tthrow new Error('Cannot generate a forecast bar that is less than 1 hour');\n\t}\n\n\tconst container = [];\n\tvar weatherIcon = data[0].icon;\n\tvar weatherSummary = data[0].summary;\n\tvar weatherCounter = 1;\n\n\tfor (let i = 1; i < maxHours; i++) {\n\t\tlet icon = data[i].icon;\n\t\tlet { color, weather, weatherMsg } = getWeatherPalette(weatherIcon);\n\t\tif (icon !== weatherIcon) {\n\t\t\tcontainer.push(\n\t\t\t\t<ForecastHour\n\t\t\t\t\tkey={`hourly-part-${i}`}\n\t\t\t\t\thours={weatherCounter}\n\t\t\t\t\tmaxHours={maxHours}\n\t\t\t\t\tcolor={color}\n\t\t\t\t\taria-label={weatherSummary}\n\t\t\t\t>\n\t\t\t\t\t<Img src={weather} alt={weatherMsg} counter={weatherCounter} />\n\t\t\t\t</ForecastHour>\n\t\t\t);\n\n\t\t\tweatherIcon = icon;\n\t\t\tweatherSummary = data[i].summary;\n\t\t\tweatherCounter = 1;\n\t\t} else {\n\t\t\tweatherCounter += 1;\n\t\t}\n\t}\n\n\tlet { color, weather, weatherMsg } = getWeatherPalette(weatherIcon);\n\tcontainer.push(\n\t\t<ForecastHour\n\t\t\tkey={`hourly-img-${maxHours}`}\n\t\t\thours={weatherCounter}\n\t\t\tmaxHours={maxHours}\n\t\t\tcolor={color}\n\t\t\taria-label={weatherSummary}\n\t\t>\n\t\t\t<Img src={weather} alt={weatherMsg} counter={weatherCounter} />\n\t\t</ForecastHour>\n\t);\n\n\treturn container;\n}\n\nexport function generateHourlyTickMarks(maxHours = 12) {\n\tconst container = [];\n\tfor (let i = 0; i < maxHours; i++) {\n\t\tcontainer.push(\n\t\t\t<ForecastTicks\n\t\t\t\tkey={`tick-${i}`}\n\t\t\t\tmaxHours={maxHours}\n\t\t\t\textended={i % 2 === 0}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn container;\n}\n\nexport default function HourlyForecast(props) {\n\tconst forecastContainer = generateHourlyForecastBar(props.hourly.data, 24);\n\tconst forecastTickMarks = generateHourlyTickMarks(24);\n\n\treturn (\n\t\t<div className=\"hourly-forecast-wrapper\">\n\t\t\t<span className=\"hourly-forecast-summary\">{props.hourly.summary}</span>\n\t\t\t<div className=\"hourly-forecast-bar\">{forecastContainer}</div>\n\t\t\t<div className=\"hourly-forecast-tickmarks\">{forecastTickMarks}</div>\n\t\t</div>\n\t);\n}\n\nHourlyForecast.propTypes = {\n\thourly: PropTypes.shape({\n\t\tsummary: PropTypes.string.isRequired,\n\t\tdata: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\ttime: PropTypes.number.isRequired,\n\t\t\t\ticon: PropTypes.string.isRequired,\n\t\t\t\ttemperature: PropTypes.number.isRequired\n\t\t\t})\n\t\t)\n\t}).isRequired\n};\n"]},"metadata":{},"sourceType":"module"}