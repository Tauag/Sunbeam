{"ast":null,"code":"var _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/currentcard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\nexport default function CurrentCard(props) {\n  function fToC(temp) {\n    return (temp / 32).toFixed(2);\n  }\n\n  var displayTemp = props.unit === 'c' ? fToC(parseFloat(props.temp)) : props.temp;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-graphic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"current-card-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"current-card-temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, displayTemp, \"\\xB0\"), React.createElement(\"span\", {\n    className: \"current-card-weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.weather))), React.createElement(\"div\", {\n    className: \"current-card-banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \"));\n}\nCurrentCard.propTypes = {\n  temp: PropTypes.string.isRequired,\n  weather: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  unit: PropTypes.string\n};\nCurrentCard.defaultProps = {\n  unit: 'f'\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/currentcard.js"],"names":["React","PropTypes","CurrentCard","props","fToC","temp","toFixed","displayTemp","unit","parseFloat","weather","propTypes","string","isRequired","icon","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1C,WAASC,IAAT,CAAcC,IAAd,EAAoB;AACnB,WAAO,CAACA,IAAI,GAAG,EAAR,EAAYC,OAAZ,CAAoB,CAApB,CAAP;AACA;;AAED,MAAMC,WAAW,GAChBJ,KAAK,CAACK,IAAN,KAAe,GAAf,GAAqBJ,IAAI,CAACK,UAAU,CAACN,KAAK,CAACE,IAAP,CAAX,CAAzB,GAAoDF,KAAK,CAACE,IAD3D;AAGA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCE,WAArC,SADD,EAEC;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCJ,KAAK,CAACO,OAA9C,CAFD,CAFD,CADD,EAQC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARD,CADD;AAYA;AAEDR,WAAW,CAACS,SAAZ,GAAwB;AACvBN,EAAAA,IAAI,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADA;AAEvBH,EAAAA,OAAO,EAAET,SAAS,CAACW,MAAV,CAAiBC,UAFH;AAGvBC,EAAAA,IAAI,EAAEb,SAAS,CAACW,MAAV,CAAiBC,UAHA;AAIvBL,EAAAA,IAAI,EAAEP,SAAS,CAACW;AAJO,CAAxB;AAOAV,WAAW,CAACa,YAAZ,GAA2B;AAC1BP,EAAAA,IAAI,EAAE;AADoB,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\n\nexport default function CurrentCard(props) {\n\tfunction fToC(temp) {\n\t\treturn (temp / 32).toFixed(2);\n\t}\n\n\tconst displayTemp =\n\t\tprops.unit === 'c' ? fToC(parseFloat(props.temp)) : props.temp;\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"current-card-wrapper\">\n\t\t\t\t<div className=\"current-card-graphic\" />\n\t\t\t\t<div className=\"current-card-info\">\n\t\t\t\t\t<span className=\"current-card-temp\">{displayTemp}&#176;</span>\n\t\t\t\t\t<span className=\"current-card-weather\">{props.weather}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"current-card-banner\"> </div>\n\t\t</div>\n\t);\n}\n\nCurrentCard.propTypes = {\n\ttemp: PropTypes.string.isRequired,\n\tweather: PropTypes.string.isRequired,\n\ticon: PropTypes.string.isRequired,\n\tunit: PropTypes.string\n};\n\nCurrentCard.defaultProps = {\n\tunit: 'f'\n};\n"]},"metadata":{},"sourceType":"module"}