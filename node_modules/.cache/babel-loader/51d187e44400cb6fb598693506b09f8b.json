{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/weatherview.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\ttext-align: center;\\n\\twidth: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CurrentCard from './currentcard';\nvar Wrapper = styled.div(_templateObject());\nexport default function WeatherView(props) {\n  var data = props.data;\n  var currently = data.currently;\n\n  function convertUnixToDate(unixTime) {\n    var date = new Date(unixTime * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return Object.keys(data).length > 0 ? React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Currently it is \".concat(convertUnixToDate(data.currently.time))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"The temperature is \".concat(currently.temperature)), React.createElement(CurrentCard, {\n    temp: currently.temperature,\n    weather: currently.summary,\n    icon: currently.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" No Data \");\n}\nWeatherView.propTypes = {\n  data: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/weatherview.js"],"names":["React","PropTypes","styled","CurrentCard","Wrapper","div","WeatherView","props","data","currently","convertUnixToDate","unixTime","date","Date","toLocaleDateString","Object","keys","length","time","temperature","summary","icon","propTypes","object","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV,mBAAb;AASA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1C,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,MAAMC,SAAS,GAAGD,IAAI,CAACC,SAAvB;;AAEA,WAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACpC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAQ,GAAG,IAApB,CAAb;AACA,WAAOC,IAAI,CAACE,kBAAL,EAAP;AACA;;AAED,SAAOC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,MAAlB,GAA2B,CAA3B,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0BP,iBAAiB,CAACF,IAAI,CAACC,SAAL,CAAeS,IAAhB,CAA3C,EADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA6BT,SAAS,CAACU,WAAvC,EAFD,EAGC,oBAAC,WAAD;AACC,IAAA,IAAI,EAAEV,SAAS,CAACU,WADjB;AAEC,IAAA,OAAO,EAAEV,SAAS,CAACW,OAFpB;AAGC,IAAA,IAAI,EAAEX,SAAS,CAACY,IAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADM,GAWN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXD;AAaA;AAEDf,WAAW,CAACgB,SAAZ,GAAwB;AACvBd,EAAAA,IAAI,EAAEP,SAAS,CAACsB,MAAV,CAAiBC;AADA,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CurrentCard from './currentcard';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\twidth: 100%;\n`;\n\nexport default function WeatherView(props) {\n\tconst data = props.data;\n\tconst currently = data.currently;\n\n\tfunction convertUnixToDate(unixTime) {\n\t\tconst date = new Date(unixTime * 1000);\n\t\treturn date.toLocaleDateString();\n\t}\n\n\treturn Object.keys(data).length > 0 ? (\n\t\t<Wrapper>\n\t\t\t<span>{`Currently it is ${convertUnixToDate(data.currently.time)}`}</span>\n\t\t\t<span>{`The temperature is ${currently.temperature}`}</span>\n\t\t\t<CurrentCard\n\t\t\t\ttemp={currently.temperature}\n\t\t\t\tweather={currently.summary}\n\t\t\t\ticon={currently.icon}\n\t\t\t/>\n\t\t</Wrapper>\n\t) : (\n\t\t<Wrapper> No Data </Wrapper>\n\t);\n}\n\nWeatherView.propTypes = {\n\tdata: PropTypes.object.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}