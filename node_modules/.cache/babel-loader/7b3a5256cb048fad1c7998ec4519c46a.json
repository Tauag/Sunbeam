{"ast":null,"code":"var _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/currentcard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\nexport default function CurrentCard(props) {\n  var _props$current = props.current,\n      temp = _props$current.temp,\n      weather = _props$current.weather,\n      icon = _props$current.icon,\n      humidity = _props$current.humidity,\n      windSpeed = _props$current.windSpeed,\n      uvIndex = _props$current.uvIndex;\n\n  function fToC(temp) {\n    return (temp / 32).toFixed(2);\n  }\n\n  var displayTemp = props.unit === 'c' ? fToC(parseFloat(temp)) : temp;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-graphic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"current-card-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"current-card-temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, displayTemp, \"\\xB0\"), React.createElement(\"span\", {\n    className: \"current-card-weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, weather))), React.createElement(\"div\", {\n    className: \"current-card-banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \"));\n}\nCurrentCard.propTypes = {\n  current: PropTypes.shape({\n    temp: PropTypes.number.isRequired,\n    weather: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    windSpeed: PropTypes.number.isRequired,\n    uvIndex: PropTypes.number.isRequired\n  }),\n  unit: PropTypes.string\n};\nCurrentCard.defaultProps = {\n  unit: 'f'\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/currentcard.js"],"names":["React","PropTypes","CurrentCard","props","current","temp","weather","icon","humidity","windSpeed","uvIndex","fToC","toFixed","displayTemp","unit","parseFloat","propTypes","shape","number","isRequired","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,uBACoBA,KAAK,CAACC,OAD1B;AAAA,MAClCC,IADkC,kBAClCA,IADkC;AAAA,MAC5BC,OAD4B,kBAC5BA,OAD4B;AAAA,MACnBC,IADmB,kBACnBA,IADmB;AAAA,MACbC,QADa,kBACbA,QADa;AAAA,MACHC,SADG,kBACHA,SADG;AAAA,MACQC,OADR,kBACQA,OADR;;AAG1C,WAASC,IAAT,CAAcN,IAAd,EAAoB;AACnB,WAAO,CAACA,IAAI,GAAG,EAAR,EAAYO,OAAZ,CAAoB,CAApB,CAAP;AACA;;AAED,MAAMC,WAAW,GAAGV,KAAK,CAACW,IAAN,KAAe,GAAf,GAAqBH,IAAI,CAACI,UAAU,CAACV,IAAD,CAAX,CAAzB,GAA8CA,IAAlE;AAEA,SACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCQ,WAArC,SADD,EAEC;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCP,OAAxC,CAFD,CAFD,CADD,EAQC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARD,CADD;AAYA;AAEDJ,WAAW,CAACc,SAAZ,GAAwB;AACvBZ,EAAAA,OAAO,EAAEH,SAAS,CAACgB,KAAV,CAAgB;AACxBZ,IAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UADC;AAExBb,IAAAA,OAAO,EAAEL,SAAS,CAACmB,MAAV,CAAiBD,UAFF;AAGxBZ,IAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBD,UAHC;AAIxBX,IAAAA,QAAQ,EAAEP,SAAS,CAACiB,MAAV,CAAiBC,UAJH;AAKxBV,IAAAA,SAAS,EAAER,SAAS,CAACiB,MAAV,CAAiBC,UALJ;AAMxBT,IAAAA,OAAO,EAAET,SAAS,CAACiB,MAAV,CAAiBC;AANF,GAAhB,CADc;AAUvBL,EAAAA,IAAI,EAAEb,SAAS,CAACmB;AAVO,CAAxB;AAaAlB,WAAW,CAACmB,YAAZ,GAA2B;AAC1BP,EAAAA,IAAI,EAAE;AADoB,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\n\nexport default function CurrentCard(props) {\n\tconst { temp, weather, icon, humidity, windSpeed, uvIndex } = props.current;\n\n\tfunction fToC(temp) {\n\t\treturn (temp / 32).toFixed(2);\n\t}\n\n\tconst displayTemp = props.unit === 'c' ? fToC(parseFloat(temp)) : temp;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"current-card-wrapper\">\n\t\t\t\t<div className=\"current-card-graphic\" />\n\t\t\t\t<div className=\"current-card-info\">\n\t\t\t\t\t<span className=\"current-card-temp\">{displayTemp}&#176;</span>\n\t\t\t\t\t<span className=\"current-card-weather\">{weather}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"current-card-banner\"> </div>\n\t\t</React.Fragment>\n\t);\n}\n\nCurrentCard.propTypes = {\n\tcurrent: PropTypes.shape({\n\t\ttemp: PropTypes.number.isRequired,\n\t\tweather: PropTypes.string.isRequired,\n\t\ticon: PropTypes.string.isRequired,\n\t\thumidity: PropTypes.number.isRequired,\n\t\twindSpeed: PropTypes.number.isRequired,\n\t\tuvIndex: PropTypes.number.isRequired\n\t}),\n\n\tunit: PropTypes.string\n};\n\nCurrentCard.defaultProps = {\n\tunit: 'f'\n};\n"]},"metadata":{},"sourceType":"module"}