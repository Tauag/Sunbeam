{"ast":null,"code":"var _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/currentcard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\nimport { generateKeyPair } from 'crypto';\n\nfunction fToC(temp) {\n  return (temp / 32).toFixed(2);\n}\n\nfunction generateBannerItems(data, targets, names) {\n  var bannerItems = [];\n\n  for (var index in targets) {\n    if (targets[index] in data) {\n      bannerItems.push(React.createElement(\"div\", {\n        key: \"\".concat(targets[index], \" - \").concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"current-card-banner-component current-card-banner-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"\".concat(names[index], \": \")), React.createElement(\"span\", {\n        className: \"current-card-banner-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"\".concat(data[targets[index]]))));\n    }\n  }\n}\n\nexport default function CurrentCard(props) {\n  var _props$current = props.current,\n      temperature = _props$current.temperature,\n      summary = _props$current.summary,\n      icon = _props$current.icon;\n  var displayTemp = props.unit === 'c' ? fToC(parseFloat(temperature)) : temperature;\n  return React.createElement(\"div\", {\n    className: \"current-card-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"current-card-graphic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"current-card-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"current-card-temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, displayTemp, \"\\xB0\"), React.createElement(\"span\", {\n    className: \"current-card-weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, summary))), React.createElement(\"div\", {\n    className: \"current-card-banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, generateBannerItems(props.current, props.bannerItems, props.bannerNames)));\n}\nCurrentCard.propTypes = {\n  current: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    summary: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    windSpeed: PropTypes.number.isRequired,\n    uvIndex: PropTypes.number.isRequired\n  }).isRequired,\n  bannerItems: PropTypes.arrayOf(PropTypes.string),\n  bannerNames: PropTypes.arrayOf(PropTypes.string),\n  unit: PropTypes.string\n};\nCurrentCard.defaultProps = {\n  bannerItems: ['humidity', 'windSpeed', 'uvIndex'],\n  bannerNames: ['Humidity', 'WindSpeed', 'UV Index'],\n  unit: 'f'\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/currentcard.js"],"names":["React","PropTypes","generateKeyPair","fToC","temp","toFixed","generateBannerItems","data","targets","names","bannerItems","index","push","CurrentCard","props","current","temperature","summary","icon","displayTemp","unit","parseFloat","bannerNames","propTypes","shape","number","isRequired","string","humidity","windSpeed","uvIndex","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './currentcard.css';\nimport { generateKeyPair } from 'crypto';\n\nfunction fToC(temp) {\n\treturn (temp / 32).toFixed(2);\n}\n\nfunction generateBannerItems(data, targets, names) {\n\tconst bannerItems = [];\n\tfor (let index in targets) {\n\t\tif (targets[index] in data) {\n\t\t\tbannerItems.push(\n\t\t\t\t<div key={`${targets[index]} - ${index}`}>\n\t\t\t\t\t<span className=\"current-card-banner-component current-card-banner-subtitle\">{`${\n\t\t\t\t\t\tnames[index]\n\t\t\t\t\t}: `}</span>\n\t\t\t\t\t<span className=\"current-card-banner-component\">{`${\n\t\t\t\t\t\tdata[targets[index]]\n\t\t\t\t\t}`}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default function CurrentCard(props) {\n\tconst { temperature, summary, icon } = props.current;\n\n\tconst displayTemp =\n\t\tprops.unit === 'c' ? fToC(parseFloat(temperature)) : temperature;\n\n\treturn (\n\t\t<div className=\"current-card-set\">\n\t\t\t<div className=\"current-card-wrapper\">\n\t\t\t\t<div className=\"current-card-graphic\" />\n\t\t\t\t<div className=\"current-card-info\">\n\t\t\t\t\t<span className=\"current-card-temp\">{displayTemp}&#176;</span>\n\t\t\t\t\t<span className=\"current-card-weather\">{summary}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"current-card-banner\">\n\t\t\t\t{generateBannerItems(\n\t\t\t\t\tprops.current,\n\t\t\t\t\tprops.bannerItems,\n\t\t\t\t\tprops.bannerNames\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nCurrentCard.propTypes = {\n\tcurrent: PropTypes.shape({\n\t\ttemperature: PropTypes.number.isRequired,\n\t\tsummary: PropTypes.string.isRequired,\n\t\ticon: PropTypes.string.isRequired,\n\t\thumidity: PropTypes.number.isRequired,\n\t\twindSpeed: PropTypes.number.isRequired,\n\t\tuvIndex: PropTypes.number.isRequired\n\t}).isRequired,\n\tbannerItems: PropTypes.arrayOf(PropTypes.string),\n\tbannerNames: PropTypes.arrayOf(PropTypes.string),\n\tunit: PropTypes.string\n};\n\nCurrentCard.defaultProps = {\n\tbannerItems: ['humidity', 'windSpeed', 'uvIndex'],\n\tbannerNames: ['Humidity', 'WindSpeed', 'UV Index'],\n\tunit: 'f'\n};\n"]},"metadata":{},"sourceType":"module"}