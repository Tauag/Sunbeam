{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/display/weatherview.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\ttext-align: center;\\n\\twidth: 100%;\\n\\tpadding: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CurrentCard from './currentcard';\nvar Wrapper = styled.div(_templateObject());\nexport default function WeatherView(props) {\n  var data = props.data;\n  var _data$currently = data.currently,\n      temperature = _data$currently.temperature,\n      summary = _data$currently.summary,\n      icon = _data$currently.icon,\n      humidity = _data$currently.humidity,\n      windSpeed = _data$currently.windSpeed,\n      uvIndex = _data$currently.uvIndex; // function convertUnixToDate(unixTime) {\n  // \tconst date = new Date(unixTime * 1000);\n  // \treturn date.toLocaleDateString();\n  // }\n\n  return Object.keys(data).length > 0 ? React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CurrentCard, {\n    current: {\n      temperature: temperature,\n      summary: summary,\n      icon: icon,\n      humidity: humidity,\n      windSpeed: windSpeed,\n      uvIndex: uvIndex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })) : React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" No Data \");\n}\nWeatherView.propTypes = {\n  data: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/display/weatherview.js"],"names":["React","PropTypes","styled","CurrentCard","Wrapper","div","WeatherView","props","data","currently","temperature","summary","icon","humidity","windSpeed","uvIndex","Object","keys","length","propTypes","object","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV,mBAAb;AAUA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1C,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AAD0C,wBAStCA,IAAI,CAACC,SATiC;AAAA,MAGzCC,WAHyC,mBAGzCA,WAHyC;AAAA,MAIzCC,OAJyC,mBAIzCA,OAJyC;AAAA,MAKzCC,IALyC,mBAKzCA,IALyC;AAAA,MAMzCC,QANyC,mBAMzCA,QANyC;AAAA,MAOzCC,SAPyC,mBAOzCA,SAPyC;AAAA,MAQzCC,OARyC,mBAQzCA,OARyC,EAW1C;AACA;AACA;AACA;;AAEA,SAAOC,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,MAAlB,GAA2B,CAA3B,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AACC,IAAA,OAAO,EAAE;AAAER,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,OAAO,EAAPA,OAAf;AAAwBC,MAAAA,IAAI,EAAJA,IAAxB;AAA8BC,MAAAA,QAAQ,EAARA,QAA9B;AAAwCC,MAAAA,SAAS,EAATA,SAAxC;AAAmDC,MAAAA,OAAO,EAAPA;AAAnD,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADM,GAON,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPD;AASA;AAEDT,WAAW,CAACa,SAAZ,GAAwB;AACvBX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,MAAV,CAAiBC;AADA,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CurrentCard from './currentcard';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\twidth: 100%;\n\tpadding: 20px;\n`;\n\nexport default function WeatherView(props) {\n\tconst data = props.data;\n\tconst {\n\t\ttemperature,\n\t\tsummary,\n\t\ticon,\n\t\thumidity,\n\t\twindSpeed,\n\t\tuvIndex\n\t} = data.currently;\n\n\t// function convertUnixToDate(unixTime) {\n\t// \tconst date = new Date(unixTime * 1000);\n\t// \treturn date.toLocaleDateString();\n\t// }\n\n\treturn Object.keys(data).length > 0 ? (\n\t\t<Wrapper>\n\t\t\t<CurrentCard\n\t\t\t\tcurrent={{ temperature, summary, icon, humidity, windSpeed, uvIndex }}\n\t\t\t/>\n\t\t</Wrapper>\n\t) : (\n\t\t<Wrapper> No Data </Wrapper>\n\t);\n}\n\nWeatherView.propTypes = {\n\tdata: PropTypes.object.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}