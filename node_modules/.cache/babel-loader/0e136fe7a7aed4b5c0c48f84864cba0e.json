{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tauag/Projects/sunbeam/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tauag/Projects/sunbeam/src/current/weathericon.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\theight: 80%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport * as Weather from '../icons/weatherstate';\nvar Img = styled.img(_templateObject());\nexport default function WeatherIcon(props) {\n  var _getIcon = getIcon(props.icon),\n      weather = _getIcon.weather,\n      weatherMsg = _getIcon.weatherMsg;\n\n  return React.createElement(Img, {\n    src: weather,\n    alt: weatherMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n}\nWeatherIcon.propTypes = {\n  icon: PropTypes.string.isRequired\n};\nWeatherIcon.defaultProps = {\n  icon: 'clear-day'\n};\n\nfunction getIcon(weatherType) {\n  switch (weatherType) {\n    case 'clear-day':\n      return {\n        weather: Weather.ClearDay,\n        weatherMsg: 'clear day',\n        color: '#F4FDA2',\n        fontColor: 'black'\n      };\n\n    case 'clear-night':\n      return {\n        weather: Weather.ClearNight,\n        weatherMsg: 'clear night',\n        color: '#F4FDA2',\n        fontColor: 'black'\n      };\n\n    case 'rain':\n      return {\n        weather: Weather.Rainy,\n        weatherMsg: 'rain',\n        color: '#66656B',\n        fontColor: 'white'\n      };\n\n    case 'snow':\n      return {\n        weather: Weather.Snowy,\n        weatherMsg: 'snow',\n        color: '#00e5ff',\n        fontColor: 'white'\n      };\n\n    case 'sleet':\n      return {\n        weather: Weather.Sleet,\n        weatherMsg: 'sleet',\n        color: '#00a0b2',\n        fontColor: 'white'\n      };\n\n    case 'wind':\n      return {\n        weather: Weather.Windy,\n        weatherMsg: 'wind',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'fog':\n      return {\n        weather: Weather.Foggy,\n        weatherMsg: 'fog',\n        color: '#5f5f62',\n        fontColor: 'white'\n      };\n\n    case 'cloudy':\n      return {\n        weather: Weather.Cloudy,\n        weatherMsg: 'cloudy',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'partly-cloudy-day':\n      return {\n        weather: Weather.PartlyCloudyDay,\n        weatherMsg: 'partly cloudly daytime',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'partly-cloudy-night':\n      return {\n        weather: Weather.PartlyCloudyNight,\n        weatherMsg: 'partly cloudly nighttime',\n        color: '#89888C',\n        fontColor: 'white'\n      };\n\n    case 'hail':\n      return {\n        weather: Weather.Hail,\n        weatherMsg: 'hail',\n        color: '#00a0b2',\n        fontColor: 'white'\n      };\n\n    case 'thunderstorm':\n      return {\n        weather: Weather.Thunderstorm,\n        weatherMsg: 'thunderstorm',\n        color: '#66656B',\n        fontColor: 'white'\n      };\n\n    case 'tornado':\n      return {\n        weather: Weather.Tornado,\n        weatherMsg: 'tornado',\n        color: '#b2102f',\n        fontColor: 'white'\n      };\n\n    default:\n      // Eventually I will put in a default icon\n      throw new Error(\"\".concat(weatherType, \" is not a supported Weather Type\"));\n  }\n}","map":{"version":3,"sources":["/Users/tauag/Projects/sunbeam/src/current/weathericon.js"],"names":["React","PropTypes","styled","Weather","Img","img","WeatherIcon","props","getIcon","icon","weather","weatherMsg","propTypes","string","isRequired","defaultProps","weatherType","ClearDay","color","fontColor","ClearNight","Rainy","Snowy","Sleet","Windy","Foggy","Cloudy","PartlyCloudyDay","PartlyCloudyNight","Hail","Thunderstorm","Tornado","Error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport * as Weather from '../icons/weatherstate';\n\nconst Img = styled.img`\n\theight: 80%;\n`;\n\nexport default function WeatherIcon(props) {\n\tconst { weather, weatherMsg } = getIcon(props.icon);\n\n\treturn <Img src={weather} alt={weatherMsg} />;\n}\n\nWeatherIcon.propTypes = {\n\ticon: PropTypes.string.isRequired\n};\n\nWeatherIcon.defaultProps = {\n\ticon: 'clear-day'\n};\n\nfunction getIcon(weatherType) {\n\tswitch (weatherType) {\n\t\tcase 'clear-day':\n\t\t\treturn {\n\t\t\t\tweather: Weather.ClearDay,\n\t\t\t\tweatherMsg: 'clear day',\n\t\t\t\tcolor: '#F4FDA2',\n\t\t\t\tfontColor: 'black'\n\t\t\t};\n\t\tcase 'clear-night':\n\t\t\treturn {\n\t\t\t\tweather: Weather.ClearNight,\n\t\t\t\tweatherMsg: 'clear night',\n\t\t\t\tcolor: '#F4FDA2',\n\t\t\t\tfontColor: 'black'\n\t\t\t};\n\t\tcase 'rain':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Rainy,\n\t\t\t\tweatherMsg: 'rain',\n\t\t\t\tcolor: '#66656B',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'snow':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Snowy,\n\t\t\t\tweatherMsg: 'snow',\n\t\t\t\tcolor: '#00e5ff',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'sleet':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Sleet,\n\t\t\t\tweatherMsg: 'sleet',\n\t\t\t\tcolor: '#00a0b2',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'wind':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Windy,\n\t\t\t\tweatherMsg: 'wind',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'fog':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Foggy,\n\t\t\t\tweatherMsg: 'fog',\n\t\t\t\tcolor: '#5f5f62',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'cloudy':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Cloudy,\n\t\t\t\tweatherMsg: 'cloudy',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'partly-cloudy-day':\n\t\t\treturn {\n\t\t\t\tweather: Weather.PartlyCloudyDay,\n\t\t\t\tweatherMsg: 'partly cloudly daytime',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'partly-cloudy-night':\n\t\t\treturn {\n\t\t\t\tweather: Weather.PartlyCloudyNight,\n\t\t\t\tweatherMsg: 'partly cloudly nighttime',\n\t\t\t\tcolor: '#89888C',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'hail':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Hail,\n\t\t\t\tweatherMsg: 'hail',\n\t\t\t\tcolor: '#00a0b2',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'thunderstorm':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Thunderstorm,\n\t\t\t\tweatherMsg: 'thunderstorm',\n\t\t\t\tcolor: '#66656B',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tcase 'tornado':\n\t\t\treturn {\n\t\t\t\tweather: Weather.Tornado,\n\t\t\t\tweatherMsg: 'tornado',\n\t\t\t\tcolor: '#b2102f',\n\t\t\t\tfontColor: 'white'\n\t\t\t};\n\t\tdefault:\n\t\t\t// Eventually I will put in a default icon\n\t\t\tthrow new Error(`${weatherType} is not a supported Weather Type`);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}